#!/bin/bash

# Check if packages where installed
if [ ! -d vendor/bin ]
then
	# If not check if composer exists
	if [ ! $(which composer) ]
	then
		php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php
		php -r "if (hash('SHA384', file_get_contents('composer-setup.php')) === '41e71d86b40f28e771d4bb662b997f79625196afcca95a5abf44391188c695c6c1456e16154c75a211d238cc3bc5cb47') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
		php composer-setup.php
		php -r "unlink('composer-setup.php');"
		sudo mv composer.phar /usr/local/bin/composer
	fi
	sudo composer install
	sudo chown -R $(whoami) vendor
fi

# Functions
pdepend()
{
	# Execute scan and output reports
	./vendor/bin/pdepend --summary-xml=$rdir/pdepend.xml $1
}

phpmd()
{
	# Execute scan and output reports
	./vendor/bin/phpmd $1 xml cleancode,codesize,controversial,design,naming,unusedcode --reportfile $rdir/phpmd.xml --suffixes php,phtml
}

phpcs()
{
	# Execute scan and output reports
	./vendor/bin/phpcs $1 --report=xml --report-file=$rdir/phpcs.xml
}

phpcpd()
{
	# Execute scan and output reports
	./vendor/bin/phpcpd $1  > $rdir/phpcpd.txt
}

phpdcd()
{
	# Execute scan and output reports
	./vendor/bin/phpdcd $1 > $rdir/phpdcd.txt
}

phploc()
{
	# Execute scan and output reports
	./vendor/bin/phploc --log-csv $rdir/phploc.csv --progress -q
}

phpcbf()
{
	./vendor/bin/phpcbf $1 > $rdir/phpcbf.txt
}

# If project directory exists run all analysers
if [ -d $1 ]
then
	# Report directory
	rdir=reports/$(date +%Y-%m-%d_%H%M%S)
	mkdir -p $rdir

	# Functions
	pdepend $1 $rdir
	phpmd $1 $rdir
	phpcs $1 $rdir
	phpcpd $1 $rdir
	phpdcd $1 $rdir
	phploc $1 $rdir
#	phpcbf $1$rdir
else
	echo The project\'s path \"$1\" doesn\'t exist
fi
